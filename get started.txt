Requisitios previos:
    - Nodejs v12 o posterior (con npm)
    - git
    - Arduino

- Descargar repo
    git clone https://github.com/uns-tesis-fassi-salazar/tesis

- Acciones para Angular
    $ cd tesis/angular-dashboard
    $ npm install
        NOTA: La primera vez puede dar error por falta de permisos. Volver a ejecutar con privilegios.
    $ npm start

- Acciones para ESP32
    Instalar PlatformIO en VSCode.
    Usando PlatformIO, descargar el framework de arduino para la placa ESP32.
    Las dependencias de las librerias necesarias las resuelve platformIO al compilar (estan en platform.ini).        

Deploy de app web en Firebase por primera vez:
- Moverse al directorio del proyecto web.
    $ cd angular-dashboard
- Compilar app para producción (genera archivos en /dist):
    $ npm run build:prod
- Instalar las herramientas de consola de firebase (solo la primera vez):
    $ npm install -g firebase-tools
- Logearse e inicializar proyecto
    $ firebase login
- Realizar Deploy
    $ firebase deploy
Nota: si se quiere modificar las reglas de la base de datos es necesario modificar el archivo firebase.json, indicandole
un archivo que contendra las nuevas reglas. Es necesario agregar lo siguiente:
{
  "hosting": {
    ...
  },
  "database": {
    "rules": "database.rules.json"
  }
}
Para mas información ver: https://firebase.google.com/docs/database/security/get-started

Deploy de firebase posteriores:
    $ npm run build:prod
    $ firebase deploy

Web push notifications:
    - Generar VAPID key pair.
        $ npm install -g web-push
        $ web-push generate-vapid-keys --json