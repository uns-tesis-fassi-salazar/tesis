#include <APWebServer.h>
#include <Led.h>

void setupButton();
void debounceButton();
void changeToAPSTAMode();
void changeToSTAMode();
void webserverSetup();
void webserverBegin();
void webserverStop();
bool connectWiFi(const String &ssid, const String &passwd, int timeout);
void printNetworkInfo();

// STA configs
String STAssid;
String STApassword;

// softAP configs
const char *APssid = "Aulas Sustentables";
const char *APpassword = "aulassustentables";
const int APchannel = 1;
const int APhidden = 0;
const int APmaxConnections = 1;

WebServer server(80);

bool canConnect = false;

void handleConfig() {
    String msg = "";
    String msg_success = R"(<div class="alert alert-success" id="alert"><span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>Conexion exitosa!</div>)";
    String msg_error = R"(<div class="alert alert-error" id="alert"><span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>Error al conectar...</div>)";
    if (server.method() == HTTP_POST) {
        if (server.hasArg("ssid") && server.hasArg("password")) {
            if (connectWiFi(server.arg("ssid"), server.arg("password"), 8)) {
                msg = msg_success;
                canConnect = true;
            } else {
                msg = msg_error;
            }
        }
    }

    String ini_content = R"(
        <!DOCTYPE html>
        <html>

        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <meta http-equiv="X-UA-Compatible" content="ie=edge">
            <title>Configuraci√≥n WiFi</title>
            <style>
                /* latin-ext */
                @font-face {
                    font-family: 'Roboto';
                    font-style: normal;
                    font-weight: 300;
                    src: local('Roboto Light'), local('Roboto-Light'), url(data:font/woff2;base64,) format('woff2');
                    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
                }

                /* latin */
                @font-face {
                    font-family: 'Roboto';
                    font-style: normal;
                    font-weight: 300;
                    src: local('Roboto Light'), local('Roboto-Light'), url(data:font/woff2;base64,) format('woff2');
                    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
                }

                .login-page {
                    width: 360px;
                    padding: 8% 0 0;
                    margin: auto;
                }

                .form {
                    position: relative;
                    z-index: 1;
                    background: #FFFFFF;
                    max-width: 360px;
                    margin: 0 auto 100px;
                    padding: 45px;
                    text-align: center;
                    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);
                }

                .form input {
                    font-family: "Roboto", sans-serif;
                    outline: 0;
                    background: #f2f2f2;
                    width: 100%;
                    border: 0;
                    margin: 0 0 15px;
                    padding: 15px;
                    box-sizing: border-box;
                    font-size: 14px;
                }

                .form button {
                    font-family: "Roboto", sans-serif;
                    text-transform: uppercase;
                    outline: 0;
                    background: #4CAF50;
                    width: 100%;
                    border: 0;
                    padding: 15px;
                    color: #FFFFFF;
                    font-size: 14px;
                    -webkit-transition: all 0.3 ease;
                    transition: all 0.3 ease;
                    cursor: pointer;
                }

                .form button:hover,
                .form button:active,
                .form button:focus {
                    background: #43A047;
                }

                .form .message {
                    margin: 15px 0 0;
                    color: #b3b3b3;
                    font-size: 12px;
                }

                .form .message a {
                    color: #4CAF50;
                    text-decoration: none;
                }

                .container {
                    position: relative;
                    z-index: 1;
                    max-width: 300px;
                    margin: 0 auto;
                }

                .container:before,
                .container:after {
                    content: "";
                    display: block;
                    clear: both;
                }

                .container .info {
                    margin: 50px auto;
                    text-align: center;
                }

                .container .info h1 {
                    margin: 0 0 15px;
                    padding: 0;
                    font-size: 36px;
                    font-weight: 300;
                    color: #1a1a1a;
                }

                .container .info span {
                    color: #4d4d4d;
                    font-size: 12px;
                }

                .container .info span a {
                    color: #000000;
                    text-decoration: none;
                }

                .container .info span .fa {
                    color: #EF3B3A;
                }

                body {
                    height: 100vh;
                    overflow: hidden;

                    /* fallback for old browsers */
                    background: #76b852;
                    background: -webkit-linear-gradient(right, #76b852, #8DC26F);
                    background: -moz-linear-gradient(right, #76b852, #8DC26F);
                    background: -o-linear-gradient(right, #76b852, #8DC26F);
                    background: linear-gradient(to left, #76b852, #8DC26F);

                    font-family: "Roboto", sans-serif;
                    -webkit-font-smoothing: antialiased;
                    -moz-osx-font-smoothing: grayscale;
                }

                h1 {
                    margin-top: 0;
                }

                .container-spinner {
                    background: #4caf50;
                    display: none;
                    height: 47px;
                }

                /* Spinner */
                .loader {
                    font-size: 3px;
                    margin: auto;
                    text-indent: -9999em;
                    width: 11em;
                    height: 11em;
                    border-radius: 50%;
                    background: #ffffff;
                    background: -moz-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);
                    background: -webkit-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);
                    background: -o-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);
                    background: -ms-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);
                    background: linear-gradient(to right, #ffffff 10%, rgba(255, 255, 255, 0) 42%);
                    position: relative;
                    -webkit-animation: load3 1.4s infinite linear;
                    animation: load3 1.4s infinite linear;
                    -webkit-transform: translateZ(0);
                    -ms-transform: translateZ(0);
                    transform: translateZ(0);
                }

                .loader:before {
                    width: 50%;
                    height: 50%;
                    background: #ffffff;
                    border-radius: 100% 0 0 0;
                    position: absolute;
                    top: 0;
                    left: 0;
                    content: '';
                }

                .loader:after {
                    background: #4caf50;
                    width: 75%;
                    height: 75%;
                    border-radius: 50%;
                    content: '';
                    margin: auto;
                    position: absolute;
                    top: 0;
                    left: 0;
                    bottom: 0;
                    right: 0;
                }

                @-webkit-keyframes load3 {
                    0% {
                        -webkit-transform: rotate(0deg);
                        transform: rotate(0deg);
                    }

                    100% {
                        -webkit-transform: rotate(360deg);
                        transform: rotate(360deg);
                    }
                }

                @keyframes load3 {
                    0% {
                        -webkit-transform: rotate(0deg);
                        transform: rotate(0deg);
                    }

                    100% {
                        -webkit-transform: rotate(360deg);
                        transform: rotate(360deg);
                    }
                }

                .alert {
                    padding: 15px;
                    margin-bottom: 20px;            
                    color: white;
                    text-align: left;
                }
                
                .alert-success {
                    background-color: #007bff;
                }

                .alert-error {
                    background-color: #dc3545;
                }

                .closebtn {
                    margin-left: 15px;
                    color: white;
                    font-weight: bold;
                    float: right;
                    font-size: 22px;
                    line-height: 20px;
                    cursor: pointer;
                    transition: 0.3s;
                }

                .closebtn:hover {
                    color: black;
                }
            </style>
        </head>

        <body>
            <div class="login-page">
                <div class="form">
    )";

    String end_conten = R"(<form action="/config" method="POST" onsubmit='onConnect(event)' class="login-form" id="wifi-form">
            <h1>WiFi</h1>
            <input type="text" id="ssid" name="ssid" placeholder="SSID" required />
            <input type="password" id="password" name="password" placeholder="Contrase√±a" />
            <button type="submit" id="submit-button">Connect to WiFi</button>
            <div class="container-spinner" id="spinner">
                <div class="loader">Loading...</div>
            </div>
        </form>
        </div>
        </div>
        <script type="text/javascript">
            function onConnect(event) {
                event.preventDefault();
                document.getElementById("submit-button").style.display = "none";
                document.getElementById("spinner").style.display = "flex";
                let onAlert = document.getElementById("alert");
                if (onAlert != null) onAlert.style.display = "none";
                setTimeout(() => {
                    document.getElementById("wifi-form").submit();
                    // document.getElementById("wifi-form").reset();
                }, 1000);
            }
        </script>
    </body>
    </html>
    )";

    String content = ini_content + msg + end_conten;

    server.send(200, "text/html", content);
    return;
}

//root page can be accessed only if authentification is ok
void handleRoot() {
    server.sendHeader("Location", "/config");
    server.sendHeader("Cache-Control", "no-cache");
    server.send(301);
    return;
}

//no need authentification
void handleNotFound() {
    String message = "File Not Found\n\n";
    message += "URI: ";
    message += server.uri();
    message += "\nMethod: ";
    message += (server.method() == HTTP_GET) ? "GET" : "POST";
    message += "\nArguments: ";
    message += server.args();
    message += "\n";
    for (uint8_t i = 0; i < server.args(); i++) {
        message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
    }
    server.send(404, "text/plain", message);
}

void printNetworkInfo() {
    uint8_t networkItem;
    String ssid;
    uint8_t encryptionType;
    int32_t RSSI;
    uint8_t *BSSID;
    int32_t channel;

    WiFi.getNetworkInfo(networkItem, ssid, encryptionType, RSSI, BSSID, channel);
    Serial.println("");
    Serial.print("NetworkItem: ");
    Serial.println(networkItem);
    Serial.print("SSID: ");
    Serial.println(ssid);
    Serial.print("EncryptionType: ");
    Serial.println(encryptionType);
    Serial.print("RSSI: ");
    Serial.println(RSSI);
    Serial.print("BSSID: ");
    Serial.println(*BSSID);
    Serial.print("Channel: ");
    Serial.println(channel);
    Serial.println("");
}

// ----------------- Station mode ------------------

void changeToSTAMode() {
    // Disable AP mode and only enable STA mode.
    if (WiFi.enableAP(false) && WiFi.enableSTA(true)) {
        Serial.println("WIFI mode: STATION");
    } else {
        Serial.println("ERROR: changeToSTAMode()");
    }
}

bool connectWiFi(const String &ssid, const String &passwd, int timeout) {
    char ssidAux[ssid.length() + 1];
    char passwdAux[passwd.length() + 1];

    ssid.toCharArray(ssidAux, sizeof(ssidAux));
    passwd.toCharArray(passwdAux, sizeof(passwdAux));

    // Connect to Wi-Fi network with SSID and password
    WiFi.begin(ssidAux, passwdAux);

    int tryCount = 0;
    // Wait for connection
    while (WiFi.status() != WL_CONNECTED && tryCount <= timeout) {
        delay(1000);
        tryCount++;
        Serial.print(".");
    }
    Serial.println("");

    if (WiFi.status() != WL_CONNECTED) {
        Serial.println("TIMEOUT, no se pudo conectar al wifi");
        return false;
    } else {
        Serial.println("");
        IPAddress IP = WiFi.localIP();
        Serial.println("Connection stablish!");
        Serial.print("STA IP address: ");
        Serial.println(IP);
        WiFi.setAutoReconnect(true);
        // printNetworkInfo();
        return true;
    }
}

// ----------------- Access Point and Station mode ------------------

void changeToAPSTAMode() {
    if ( WiFi.status() == WL_CONNECTED) {
        Serial.println("Disconnecting from wifi‚Ä¶");
        WiFi.setAutoReconnect(false);
        WiFi.disconnect(false, false);  // disconnect station without turn off wifi and erase config.
    }
    if (WiFi.enableAP(true) && WiFi.enableSTA(true)) {
        Serial.println("WIFI mode: AP - STA");
        // Enable AP and STA mode. Sta is disconnected from current wifi.
        Serial.println("Setting AP (Access Point)");
        WiFi.softAP(APssid, APpassword, APchannel, APhidden, APmaxConnections);

        IPAddress IP = WiFi.softAPIP();
        Serial.print("AP IP address: ");
        Serial.println(IP);
        // printNetworkInfo();
        Serial.println("ESP en modo AP y STA");

        webserverBegin();

    } else {
        Serial.println("ERROR: changeToAPSTAMode()");
    }
}

// ------------------ Webserver -------------------

void webserverSetup() {
    Serial.println("Setting webserver");
    server.on("/", handleRoot);
    server.on("/config", handleConfig);
    server.on("/inline", []() {
        server.send(200, "text/plain", "this works without need of authentification");
    });

    server.onNotFound(handleNotFound);
    //here the list of headers to be recorded
    const char *headerkeys[] = {"User-Agent", "Cookie"};
    size_t headerkeyssize = sizeof(headerkeys) / sizeof(char *);
    //ask server to track these headers
    server.collectHeaders(headerkeys, headerkeyssize);
}

void webserverBegin() {
    server.begin();
    Serial.println("HTTP server started");
}

void webserverStop() {
    // server.client().stop();
    server.stop();
    Serial.println("webserver detenido");
}

// --------------------- BUTTON -----------------------

#define BUTTON_PIN GPIO_NUM_2

struct Button {
    const uint8_t PIN;
    bool state;
    bool pressed;
    ulong pressTime;
};

Button button = {BUTTON_PIN, false, false, 0};

void IRAM_ATTR buttonInterrupt() {
    button.pressTime = millis();
    button.pressed = true;
}

void setupButton() {
    pinMode(button.PIN, PULLUP);
    attachInterrupt(button.PIN, buttonInterrupt, FALLING);
}

void buttonListener() {
    if (button.pressed) {
        if (digitalRead(button.PIN) == LOW) {
            ulong readTime;
            readTime = millis();
            if ((readTime - button.pressTime) > 1000) {
                Serial.println("Button pressss!");
                button.pressed = false;
                blinkLed();
                WiFi.disconnect(true, true);
                ESP.restart();
            }
        } else {
            button.pressed = false;
        }
    }
}

// int buttonState;
// int lastButtonState = LOW;

// unsigned long lastDebounceTime = 0;
// unsigned long debounceDelay = 50;

// TODO: button with interruption
// void debounceButton() {
//     int reading = digitalRead(buttonPin);

//     if (reading != lastButtonState) {
//         lastDebounceTime = millis();
//     }

//     if ((millis() - lastDebounceTime) > debounceDelay) {
//         if (reading != buttonState) {
//             buttonState = reading;
//             if (buttonState == HIGH) {
//                 Serial.println("Button pressss!");
//                 WiFi.disconnect(true, true);
//                 ESP.restart();
//                 // changeToAPSTAMode();
//             }
//         }
//     }
//     lastButtonState = reading;
// }

void APWebServerSetup(void) {
    setupButton();
    webserverSetup();

    WiFi.mode(WIFI_STA);
    WiFi.begin();

    Serial.println("");

    int timeout = 0;
    // Wait for connection
    while (WiFi.status() != WL_CONNECTED && timeout <= 5) {
        delay(1000);
        timeout++;
        Serial.print(".");
    }

    if (WiFi.status() != WL_CONNECTED) {
        Serial.println("No se pudo conectar al wifi");
        changeToAPSTAMode();

    } else {
        Serial.println("");
        IPAddress IP = WiFi.localIP();
        Serial.print("STA IP address: ");
        Serial.println(IP);
        // printNetworkInfo();
    }
}

void APWebServerLoop(void) {
    buttonListener();
    if (WiFi.getMode() == WIFI_MODE_APSTA) {
        server.handleClient();
        if (canConnect) {
            changeToSTAMode();
            webserverStop();
            canConnect = false;
        }
    }
}

void listenButtonWiFiReset() {
    // debounceButton();
    buttonListener();
}